deploy-staging:
  needs: ci
  runs-on: ubuntu-latest
  environment: staging
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: true

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Ensure pnpm on PATH
      run: bash scripts/pnpm_ensure.sh

    - name: Check pnpm
      run: |
        which pnpm || true
        echo "PATH=$PATH"
        pnpm -v

    - name: Install psql client
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client

    # ðŸ”Ž Show exactly what weâ€™re about to deploy
    - name: Debug env and changed services
      run: |
        echo "STAGING_DB_URL set? $([[ -n "${STAGING_DB_URL:-}" ]] && echo yes || echo no)"
        echo "FLY_API_TOKEN set? $([[ -n "${FLY_API_TOKEN:-}" ]] && echo yes || echo no)"
        echo "GITHUB_BASE_REF=${GITHUB_BASE_REF:-}"
        echo "Branch=${GITHUB_REF_NAME}"
        echo "Computing changed servicesâ€¦"
        bash scripts/changed_services.sh "${GITHUB_BASE_REF:-}" | tee /tmp/changed.txt
        echo "---- CHANGED:"
        cat /tmp/changed.txt || true
        echo "---- end list"
      env:
        STAGING_DB_URL: ${{ secrets.STAGING_DB_URL }}
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

    - name: Run migrations (expand-safe)
      env:
        STAGING_DB_URL: ${{ secrets.STAGING_DB_URL }}
      run: bash scripts/migrate_expand.sh "$STAGING_DB_URL"

    # ðŸ§ª run deploy with full tracing; don't hide errors
    - name: Deploy changed services to staging
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      shell: bash
      run: bash -x scripts/deploy_changed_services.sh "staging" "staging"
