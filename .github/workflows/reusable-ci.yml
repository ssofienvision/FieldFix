name: reusable-ci

on:
  workflow_call:
    inputs:
      service:
        required: false
        type: string

jobs:
  ci:
    runs-on: ubuntu-latest

    # Minimal permissions for building & pushing to GHCR
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'

      - name: Ensure pnpm on PATH
        run: bash scripts/pnpm_ensure.sh

      - name: Show tool versions
        run: |
          node -v
          npm -v
          pnpm -v

      - name: Install dependencies
        run: |
          if [ -n "$(git ls-files '**/pnpm-lock.yaml')" ]; then
            echo "pnpm lock found → frozen install"
            pnpm install --frozen-lockfile
          elif [ -n "$(git ls-files '**/package-lock.json' '**/npm-shrinkwrap.json')" ]; then
            echo "npm lock found → npm ci"
            npm ci || true
          else
            echo "no lockfile → pnpm install (non-frozen)"
            pnpm install || true
          fi

      - name: Lint & Typecheck (best-effort)
        run: |
          pnpm -w run lint || echo "lint skipped"
          pnpm -w run typecheck || echo "typecheck skipped"

      - name: Unit tests (best-effort)
        run: pnpm -w run test -- --coverage || echo "tests skipped"

      - name: Build Docker images for changed services
        env:
          REGISTRY: ghcr.io/${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bash scripts/build_and_push_images.sh

      - name: Container scan with Trivy (non-blocking)
        run: bash scripts/scan_images.sh || echo "scan warnings (non-blocking)"
